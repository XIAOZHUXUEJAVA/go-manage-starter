basePath: /api/v1
definitions:
  model.CreateUserRequest:
    properties:
      email:
        type: string
      password:
        type: string
      username:
        type: string
    required:
      - email
      - password
      - username
    type: object
  model.LoginRequest:
    properties:
      password:
        type: string
      username:
        type: string
    required:
      - password
      - username
    type: object
  model.LoginResponse:
    properties:
      access_token:
        type: string
      expires_in:
        type: integer
      refresh_expires_in:
        type: integer
      refresh_token:
        type: string
      token_type:
        type: string
      user:
        $ref: "#/definitions/model.UserResponse"
    type: object
  model.User:
    properties:
      created_at:
        type: string
      email:
        type: string
      id:
        type: integer
      updated_at:
        type: string
      username:
        type: string
    type: object
  model.UserResponse:
    properties:
      created_at:
        type: string
      email:
        type: string
      id:
        type: integer
      updated_at:
        type: string
      username:
        type: string
    type: object
  utils.APIResponse:
    properties:
      code:
        type: integer
      data: {}
      error:
        type: string
      message:
        type: string
    type: object
host: localhost:9000
info:
  contact:
    email: support@swagger.io
    name: API 支持
    url: http://www.swagger.io/support
  description: 基于 Go 和 Gin 构建的管理系统 API
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Go 管理系统启动器 API
  version: "1.0"
paths:
  /auth/login:
    post:
      consumes:
        - application/json
      description: 用户登录验证，返回访问令牌
      parameters:
        - description: 登录信息
          in: body
          name: credentials
          required: true
          schema:
            $ref: "#/definitions/model.LoginRequest"
      produces:
        - application/json
      responses:
        "200":
          description: 登录成功
          schema:
            allOf:
              - $ref: "#/definitions/utils.APIResponse"
              - properties:
                  data:
                    $ref: "#/definitions/model.LoginResponse"
                type: object
        "400":
          description: 请求参数错误
          schema:
            $ref: "#/definitions/utils.APIResponse"
        "401":
          description: 认证失败
          schema:
            $ref: "#/definitions/utils.APIResponse"
        "500":
          description: 服务器内部错误
          schema:
            $ref: "#/definitions/utils.APIResponse"
      summary: 用户登录
      tags:
        - auth
  /auth/register:
    post:
      consumes:
        - application/json
      description: Register a new user with username, email and password
      parameters:
        - description: User registration data
          in: body
          name: user
          required: true
          schema:
            $ref: "#/definitions/model.CreateUserRequest"
      produces:
        - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: "#/definitions/model.User"
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Register a new user
      tags:
        - auth
  /public/users/{id}:
    get:
      consumes:
        - application/json
      description: 根据用户ID获取用户的基本信息，无需登录验证
      parameters:
        - description: 用户ID
          in: path
          name: id
          required: true
          type: integer
      produces:
        - application/json
      responses:
        "200":
          description: 获取成功
          schema:
            allOf:
              - $ref: "#/definitions/utils.APIResponse"
              - properties:
                  data:
                    $ref: "#/definitions/model.UserResponse"
                type: object
        "400":
          description: 请求参数错误
          schema:
            $ref: "#/definitions/utils.APIResponse"
        "404":
          description: 用户不存在
          schema:
            $ref: "#/definitions/utils.APIResponse"
        "500":
          description: 服务器内部错误
          schema:
            $ref: "#/definitions/utils.APIResponse"
      summary: 获取用户信息
      tags:
        - 公开接口
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
